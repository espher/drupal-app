<?php
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\search_api\Index\IndexInterface;

/**
 * Implements hook_page_attachments().
 */
function movie_page_attachments(array &$attachments) {
  if (\Drupal::service('router.admin_context')->isAdminRoute()) {
    $attachments['#attached']['library'][] = 'movie/admin_styling';
  }
}


/**
 * Implements hook_toolbar().
 */
function movie_toolbar() {
    $items = [];

    $items['Movies App'] = [
        '#cache' => [
            'contexts' => ['user.permissions'],
        ],
    ];

    if (!\Drupal::currentUser()->hasPermission('Access the Commande overview page')) {
        return $items;
    }

    $items['Movies App'] += [
        '#type' => 'toolbar_item',
        '#weight' => 20,
        'tab' => [
            '#type' => 'link',
            '#title' => 'Movies App',
            '#url' => \Drupal\Core\Url::fromUri("internal:/admin/movie/commandes"),
            '#attributes' => [
                'title' => 'Movies menu',
                'class' => [],
            ],
        ],
        'tray' => [
            'movie_menu' => [
              '#type' => 'container',
              '#id' => 'movie',
              '#attributes' => [
                'class' => ['toolbar-menu-movies'],
              ],
              'configuration' => 
                [
                    '#type' => 'link',
                    '#title' => 'All Movies',
                    '#url' => \Drupal\Core\Url::fromUri("internal:/admin/movie/all"),
                    
                ],
                [
                    '#type' => 'link',
                    '#title' => 'Create Movies',
                    '#url' => \Drupal\Core\Url::fromUri("internal:/admin/movie/add"),

                ],
                [
                  '#type' => 'link',
                  '#title' => 'All Actors',
                  '#url' => \Drupal\Core\Url::fromUri("internal:/admin/actor/all"),

                ],
                [
                  '#type' => 'link',
                  '#title' => 'Create Actors',
                  '#url' => \Drupal\Core\Url::fromUri("internal:/admin/actor/add"),

                ],
            ],
            
        ],
        '#attached' => array(
            'library' => array(
                'movie/admin',
            ),
        ),

    ];
    return $items;
}


/**
 * Implements hook_theme().
 */
function movie_theme($existing, $type, $theme, $path) {
  return [
    'movies_list' => [
      'render element' => 'children',
      'template' => 'movie-list-theme',
      'path' => $path . '/templates',
      'variables' => [
        'links'     => '',
        'base_url'  => '',
      ]
    ],
    'movie_single_theme' => [
      'render element' => 'children',
      'template' => 'movie-single-theme',
      'path' => $path . '/templates',
      'variables' => [
          'title'     => '',
          'synopsis'  => '',
          'image'     => '',
          'actors'    => [],
          'base_url'  => '',
      ],
    ],
    'actors_list' => [
      'render element' => 'children',
      'template' => 'actors-list-theme',
      'path' => $path . '/templates',
      'variables' => [
        'links'     => '',
        'base_url'  => '',
      ]
    ],
    'actor_single_theme' => [
      'render element' => 'children',
      'template' => 'actors-single-theme',
      'path' => $path . '/templates',
      'variables' => [
          'name'      => '',
          'biography' => '',
          'image'     => '',
          'movies'    => [],
          'base_url'  => '',
      ],
    ],
  ];

}


/**
 * Implements hook_cron().
 */
function movie_cron() {
  $query = \Drupal::database()->select('movie_movie', 't')->fields('t', ['id', 'title']);
  $results = $query->execute()->fetchAll();

  foreach ($results as $result) {
    IndexInterface::search_api_index_item_insert('movie_index', $result['id'], 'movie_movie', $result);
  }  
}
